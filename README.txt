# Документація функцій

## Клас `SecureBox`

### Конструктор `SecureBox(uint32_t x, uint32_t y)`
Створює об'єкт класу `SecureBox` із заданими розмірами `x` та `y`.

- **Параметри:**
  - `x` (uint32_t): ширина коробки.
  - `y` (uint32_t): висота коробки.

- **Опис:**
  Ініціалізує коробку із заданими розмірами, заповнює її випадковим чином та перемішує стан.

---

### `void toggle(uint32_t x, uint32_t y)`
Перемикає стан клітинок у заданому рядку та стовпці.

- **Параметри:**
  - `x` (uint32_t): індекс стовпця.
  - `y` (uint32_t): індекс рядка.

- **Опис:**
  Змінює стан клітинок у вказаному рядку та стовпці, а також компенсує зміну центральної клітинки.

---

### `bool isLocked()`
Перевіряє, чи заблокована коробка.

- **Повертає:**
  - `true`, якщо хоча б одна клітинка не дорівнює 0.
  - `false`, якщо всі клітинки дорівнюють 0.

---

### `std::vector<std::vector<uint8_t>> getState()`
Повертає поточний стан коробки.

- **Повертає:**
  - Двовимірний вектор, що представляє стан коробки.

---

### `void shuffle()`
Перемішує стан коробки випадковим чином.

---

## Функція `bool solveBox(std::vector<std::vector<uint8_t>>& state, uint32_t xSize, uint32_t ySize, std::vector<std::vector<uint8_t>>& presses)`

Розв'язує систему рівнянь для розблокування коробки.

- **Параметри:**
  - `state` (std::vector<std::vector<uint8_t>>): поточний стан коробки.
  - `xSize` (uint32_t): ширина коробки.
  - `ySize` (uint32_t): висота коробки.
  - `presses` (std::vector<std::vector<uint8_t>>&): матриця натискань для розблокування.

- **Повертає:**
  - `true`, якщо рішення знайдено.
  - `false`, якщо рішення не знайдено.

- **Опис:**
  Використовує метод Гаусса для розв'язання системи рівнянь модуль 3, щоб визначити послідовність натискань для розблокування коробки.

---

## Функція `bool openBox(SecureBox& box)`

Намагається розблокувати коробку.

- **Параметри:**
  - `box` (SecureBox&): об'єкт коробки.

- **Повертає:**
  - `true`, якщо коробка успішно розблокована.
  - `false`, якщо коробка залишилася заблокованою.

- **Опис:**
  Отримує поточний стан коробки, обчислює послідовність натискань для розблокування та застосовує їх.

---

## Функція `int main(int argc, char* argv[])`

Точка входу в програму.

- **Параметри:**
  - `argc` (int): кількість аргументів командного рядка.
  - `argv` (char*[]): масив аргументів командного рядка.

- **Повертає:**
  - `0`, якщо коробка успішно розблокована.
  - `1`, якщо коробка залишилася заблокованою.

- **Опис:**
  Створює об'єкт `SecureBox` із розмірами, вказаними в аргументах командного рядка, та намагається розблокувати його. Виводить результат у консоль.